%% -*- erlang -*-

{erl_opts, [debug_info, warnings_as_errors, {parse_transform, lager_transform}]}.

%%-------------------------------------------------------------------
%% Dependencies
%%-------------------------------------------------------------------

{deps,
 [
  %% Lets overwrite stuff that is not 18.0 compatible :(
  {edown,".*",     {git, "https://github.com/uwiger/edown.git",       {branch, "master"}}},
  {lager, "2.1.1"},
  {ranch, "1.1.0"},
  fifo_utils,
  {riak_core, ".*", {git, "https://github.com/project-fifo/riak_core.git", {branch, "fifo-0.7.1"}}},
  {cuttlefish, ".*", {git, "https://github.com/tsloughter/cuttlefish.git", {branch, "develop"}}},
  {k6_bytea, "1.1.4", {git, "https://github.com/dalmatinerdb/k6_bytea.git", {tag, "1.1.4"}}},
  {cluster_info, ".*", {git, "https://github.com/basho/cluster_info.git", {tag, "2.0.4"}}},
  trie,
  {mmath, ".*", {git, "https://github.com/dataloop/mmath.git", {branch, "decimal-floating-point-numbers"}}},
  mstore,
  dproto,
  eper,
  recon
 ]}.

%%-------------------------------------------------------------------
%% Plugins
%%-------------------------------------------------------------------

{plugins,
 [pc,
  {rebar3_cuttlefish, ".*", {git, "git://github.com/tsloughter/rebar3_cuttlefish.git", {branch, "master"}}}
 ]}.

%%-------------------------------------------------------------------
%% Hooks
%%-------------------------------------------------------------------

{pre_hooks, [{compile, "make version_header"}]}.

%%-------------------------------------------------------------------
%% Testing
%%-------------------------------------------------------------------

{eunit_opts, [{report,{eunit_surefire,[{dir,"."}]}}]}.

{elvis,
 [#{dirs => ["apps/*/src"],
    filter => "*.erl",
    rules => [{elvis_style, line_length,
               #{ignore => [],
                 limit => 80,
                 skip_comments => false}},
              {elvis_style, no_tabs},
              {elvis_style, no_trailing_whitespace},
              {elvis_style, macro_names, #{ignore => []}},
              {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                         {right, "++"},
                                                         {left, "++"}]}},
              {elvis_style, nesting_level, #{level => 3}},
              {elvis_style, god_modules,
               #{limit => 25,
                 ignore => []}},
              {elvis_style, no_if_expression},
              {elvis_style, invalid_dynamic_call,
               #{ignore => [%% The
                            dalmatiner_tcp
                            ]}},
              {elvis_style, used_ignored_variable},
              {elvis_style, no_behavior_info},
              {
                elvis_style,
                module_naming_convention,
                #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                  ignore => []}
              },
              {
                elvis_style,
                function_naming_convention,
                #{regex => "^([a-z][a-z0-9]*_?)*$"}
              },
              {elvis_style, state_record_and_type},
              {elvis_style, no_spec_with_records},
              {elvis_style, dont_repeat_yourself, #{min_complexity => 12}},
              {elvis_style, no_debug_call,
               #{ignore => [
                            %% This is a console, we are doing IO there not
                            %% any debug output.
                            dalmatiner_console
                           ]}}
             ]
   },
  #{dirs => ["."],
    filter => "Makefile",
    rules => [{elvis_project, no_deps_master_erlang_mk, #{ignore => []}},
              {elvis_project, protocol_for_deps_erlang_mk, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "rebar.config",
    %% on the test branch master deps are OK
    rules => [%{elvis_project, no_deps_master_rebar, #{ignore => []}},
              {elvis_project, protocol_for_deps_rebar, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "elvis.config",
    rules => [{elvis_project, old_configuration_format}]
   }
 ]
}.

%%-------------------------------------------------------------------
%% Profiles
%%-------------------------------------------------------------------

{profiles,
 [{eqc, [{deps, [meck]}, {plugins, [{rebar3_eqc, ".*", {git, "git://github.com/project-fifo/rebar3-eqc-plugin.git", {branch, "fifo"}}}]}]},
  {short, [{erl_opts, [{d, 'EQC_SHORT_TEST'}]}]},
  {long, [{erl_opts, [{d, 'EQC_LONG_TEST'}]}]},
  {prod, [{relx, [{dev_mode, false}]}]},
  {deb, 
   [{relx, 
     [{dev_mode, false},
      {overlay_vars, "rel/vars/deb.config"}]},
    {cuttlefish_filename, "ddb.conf"}]},
  {lint,
   [{plugins,
     [{rebar3_lint,
       {git, "https://github.com/project-fifo/rebar3_lint.git",
        {tag, "0.1.2"}}}]}]}
 ]}.

%%-------------------------------------------------------------------
%% Overrides
%%-------------------------------------------------------------------

{overrides,
 [
  %% R18
  {override, cluster_info,
   [{erl_opts, [{i,"./priv/"}, debug_info]}]},
  {override, edown,
   [{erl_opts, [debug_info]}]},
  {override, eper,
   [{erl_opts, [debug_info]}]},

  {override, riak_core,
   [{erl_opts, [{parse_transform, lager_transform},
                debug_info, {platform_define, "^[0-9]+", namespaced_types},
                {platform_define, "^R15", "old_hash"}]}]},
  {override, riak_ensemble,
   [{erl_opts, [debug_info,
                warn_untyped_record,
                {parse_transform, lager_transform}]}]},
  {override, pooler,
   [{erl_opts,
     [{platform_define, "^[0-9]+", namespaced_types},
      debug_info,
      inline]}]},
  %% Normal
  {override, setup, [{post_hooks, []}]},
  {override, eleveldb,
   [{pre_hooks, [{compile, "c_src/build_deps.sh get-deps"},
                 {compile, "c_src/build_deps.sh"}]},

    {post_hooks, [{clean, "c_src/build_deps.sh clean"}]},

    {plugins,
     [pc]},

    {provider_hooks,
     [{post,
       [{compile, {pc, compile}},
        {clean, {pc, clean}}]}]}]}]}.

%%-------------------------------------------------------------------
%% RELx
%%-------------------------------------------------------------------

{relx,
 [{release, {"ddb", "0.1.2"},
   [sasl,
    dalmatiner_db,
    {recon, load},
    {setup , load},
    {cuttlefish, load},
    {runtime_tools, load}, %% for dyntrace
    {bear, load}, % we need this since folsom doesn't include it
    {eper, load}
   ]},
  {dev_mode, true},
  {include_erts, true},
  {generate_start_script, false},
  {overlay_vars, "rel/vars.config"},
  {overlay,
   [{mkdir, "etc"},
    {copy, "rel/files/erl", "erts-\{\{erts_vsn\}\}/bin/erl"},
    {copy, "rel/files/nodetool", "erts-\{\{erts_vsn\}\}/bin/nodetool"},
    {template, "rel/files/ddb", "bin/ddb"},
    {template, "rel/files/ddb-admin", "bin/ddb-admin"},
    {copy, "_build/default/bin/cuttlefish", "bin/cuttlefish"},
    {copy, "share", "share"},
    %% {copy, "_build/prod/lib/fifo_utils/priv/update_config.sh", "share/"},
    {template, "schema/dalmatinerdb.schema", "share/schema/00-dalmatinerdb.schema"},
    {template, "schema/erlang_vm.schema", "share/schema/01-vm.schema"},
    {template, "_build/default/lib/riak_core/priv/riak_core.schema", "share/schema/02-riak_core.schema"},
    {template, "schema/lager.schema", "share/schema/03-lager.schema"}
   ]}]}.

%%-------------------------------------------------------------------
%% Cuttlefish
%%-------------------------------------------------------------------

{cuttlefish_filename, "dalmatinerdb.conf.example"}.

{provider_hooks,
 [{post, [{release, cuttlefish}]}]}.
