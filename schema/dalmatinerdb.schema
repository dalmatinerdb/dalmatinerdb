%% -*- erlang -*-

%% @doc The tcp port dalmatiner_db listens on for the tcp API
{mapping, "tcp_port", "dalmatiner_db.tcp_port",
 [{default, {{tcp_port}} },
  {datatype, integer}]}.

%% @doc Number of acceptor processes to keep around for tcp connections.
{mapping, "tcp_listeners", "dalmatiner_db.tcp_listeners",
 [{default, 100},
  {datatype, integer}]}.

%% @doc Number of allowed concurrent tcp connections.
{mapping, "tcp_max_connections", "dalmatiner_db.tcp_max_connections",
 [{default, 1024},
  {datatype, integer}]}.

%% @doc The number of Asyncronous worker for a vnode.
{mapping, "async_workers", "metric_vnode.async_workers",
 [{datatype, integer},
  {default, 5}]}.

%% @doc When handling handoffs how much should be the largest chunk be.
%% Large chunks improve thourhgput but too large chunks will cause
%% timeouts.
{mapping, "handoff_max_chunk_size", "metric_vnode.handoff_chunk",
 [{datatype, bytesize},
  {default, "1KB"}]}.

%% @doc The datapoints stored per file, default equals 1 week of data
%% in a 1 second resolution.
{mapping, "points_per_file", "metric_vnode.points_per_file",
 [{datatype, integer},
  {default, 604800}]}.

%% @doc How many datapoints are cached before being written to disk. This
%% is a maximum value, writes also occour before a specific metric is read,
%% this effects lost data on crashes.
{mapping, "cache_points", "metric_vnode.cache_points",
 [{datatype, integer},
  {default, 120}]}.

%% @doc How long data is kept by default
{mapping, "lifetime", "metric_vnode.lifetime",
 [{datatype, [integer, {atom, infinity}]},
  {default, "infinity"}]}.

%% @doc How often a pertition will be picked to be vacuumed.
{mapping, "vacuum_interval", "dalmatiner_vacuum.interval",
 [{default, "1h"},
  {datatype, {duration, ms}}]}.

%% @doc The path data gets stored into.
{mapping, "platform_data_dir", "riak_core.platform_data_dir",
 [{default, "{{platform_data_dir}}"},
  {datatype, string}]}.


%% @doc Default ring creation size.  Make sure it is a power of 2,
%% e.g. 16, 32, 64, 128, 256, 512 etc
%% This is set to a default of 4 to work in a one server installation
%% if you plan to expand your system please set it higher and reads
%% the manual at http://bit.ly/1ciKRkS
{mapping, "ring_size", "riak_core.ring_creation_size",
 [{datatype, integer},
  {default, 64},
  {commented, 64},
  {validators, ["ring_size"]}
 ]}.

{validator, "ring_size", "not a power of 2 greater than 1",
 fun(Size) ->
         Size > 1 andalso (Size band (Size-1) =:= 0)
 end}.

%% @doc The number of copies of the data that is keeped.
%% For good consistency N  < (R + W) should be true.
{mapping, "n", "dalmatiner_db.n",
 [{datatype, integer},
  {default, 1}]}.

%% @doc The number of replies requried for a read request to succeed
%% The lower the value the faster the replies but the more likely stale
%% data is returend.
{mapping, "r", "dalmatiner_db.r",
 [{datatype, integer},
  {default, 1}]}.

%% @doc The number of replies requried for a write request to succeed
%% The lower the value the faster the write but the more likely to only
%% write partial data.
{mapping, "w", "dalmatiner_db.w",
 [{datatype, integer},
  {default, 1}]}.

%% @doc Schema directory
{mapping, "schema_dir", "riak_core.schema_dirs",
 [{default, "./share/schema"},
  {datatype, string}]
}.

{translation,
  "riak_core.schema_dirs",
  fun(Conf) ->
          D = cuttlefish:conf_get("schema_dir", Conf),
          [D]
  end
}.

%% @doc handoff.ip is the network address that Riak binds to for
%% intra-cluster data handoff.
{mapping, "handoff.ip", "riak_core.handoff_ip", [
  {default, "127.0.0.1" },
  {datatype, string},
  {validators, ["valid_ipaddr"]}
]}.
